tit=$"ㅤㅤ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠛⠛⠋⠉⠙⠻⠿⠿⠿⠿⢿⣿⣿⣿⣿⣿⣿\nㅤㅤ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠃⠄⠄⠄⠄⠄⠄⠄⠄⠹⣿⣿⣶⣶⣦⣬⢹⣿⣿\nㅤㅤ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠄⠄⠄⣰⣧⡀⠄⠄⠄⠄⠈⢙⡋⣿⣿⣿⢸⣿⣿\nㅤㅤ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠄⠰⠼⢯⣿⣿⣦⣄⠄⠄⠄⠈⢡⣿⣿⣿⢸⣿⣿\nㅤㅤ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠄⠄⠸⠤⠕⠛⠙⠷⣿⡆⠄⠄⠄⣸⣿⣿⡏⣼⣿⣿\nㅤㅤ⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣴⣿⣿⣿⢡⣿⣿⣿\nㅤㅤ⣿⣿⣿⣿⣿⣿⣿⣿⡟⠄⠄⠄⠄⠄⣄⠄⢀⠄⠄⢀⣤⣾⣿⣿⣿⢃⣾⣿⣿⣿\nㅤㅤ⣿⣿⣿⣿⣿⣿⠿⣛⣡⣄⣀⠄⠠⢴⣿⣿⡿⣄⣴⣿⣿⣿⣿⣿⢃⣾⣿⣿⣿⣿\nㅤㅤ⣿⣿⣿⣿⣿⡏⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣩⡽⡁⢸⣿⣿⣿⣿⣿\nㅤㅤ⣿⣿⣿⣿⣿⢃⣿⣿⢟⣿⣿⣿⣿⣿⣮⢫⣿⣿⣿⣿⣿⣟⢿⠃⠄⢻⣿⣿⣿⣿\nㅤㅤ⣿⣿⣿⣿⡿⣸⠟⣵⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣷⣄⢰⡄⢿⣿⣿⣿\nㅤㅤ⣿⣿⣿⣿⡇⠏⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⠹⡎⣿⣿⣿\n\e[33;01m██▀ﾠ█▄█ﾠ█ﾠ▄▀▀ﾠ▄▀▄ﾠ█▀▄ﾠ██▀ﾠ█▄ﾠ█ﾠ██▀ﾠ█▀▄\n█▄▄ﾠ█ﾠ█ﾠ█ﾠ▄██ﾠ▀▄▀ﾠ█▀ﾠﾠ█▄▄ﾠ█ﾠ▀█ﾠ█▄▄ﾠ█▀▄\e[0m\nㅤㅤ⡀⠈⢿⠄⣿⡇⠄⠙⠿⣿⡿⠿⢋⣥⣾⣿⣷⣌⠻⢿⣿⣿⡿⠟⣡⣾⣿⣿⠿⢋\nㅤㅤ⠛⠳⠄⢠⣿⠇⠄⣷⡑⢶⣶⢿⣿⣿⣿⣽⣿⣿⣿⣶⣶⡐⣶⣿⠿⠛⣩⡄⠄⢸"
tokens=$(echo "f79ae136-8dcd-40c5-8421-d1371c9e50d1
db715101-d88f-4d66-a68c-a13567919074
6e7eb039-9816-4118-9c3b-bb906887722c")
while :; do
clear; echo -e $tit; echo

  echo -e "\e[01;37;41m    VERIFICAR SE HÁ ADS DISPONIVEL    \e[0m"; sleep .4; echo
  echo -e "          \e[01;37m ＯＰＣＯＥＳ \e[0m"
  echo -e "  \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
  echo -e "   \e[01;37m〘*1*〙\e[0m\e[01;04;33mVERIFICADOR AUTOMÁTICO\e[0m\c"; echo -e "\e[02;03;37m Use dados móveis nessa opção\e[0m"
  echo -e "   \e[01;37m〘*2*〙\e[0m\e[01;04;33mVERIFICADOR MANUAL\e[0m\c"; echo -e "\e[02;03;37m     Cole o Pass manualmente\e[0m"
  echo -e "   \e[01;37m〘*3*〙\e[0m\e[01;04;33mPULAR VERIFICADOR\e[0m\c"; echo -e "\e[02;03;37m      Ir direto ao padrão\e[0m"
  echo -e "  \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
  echo -e "   \e[01;37m『*4*』\e[0m\e[01;04;33mSOLICITAR PASS\e[0m\c"; echo -e "\e[02;03;37m          Use dados móveis nessa opção\e[0m"
  echo -e "   \e[01;37m『*0*』\e[0m\e[01;04;33mCAIR FORA DO SCRIPT\e[0m\c"; echo -e "\e[02;03;37m    Noob sofre\e[0m"
  echo -e "  \e[00;31m═══════════════════════════════\e[0m"
  
veri=$(echo -e "\e[01;37m Opção: \e[0m")
  read -n1 -p "$veri" verifica; echo
    case $verifica in # case MENU
        1)
         while :; do
             echo -e "\e[01;02;37m # UTILIZE A REDE DO CHIP NESSA OPÇÃO! #\e[0m"|pv -qL 18; sleep 2.5
             clear; echo -e $tit; echo; echo -e "\e[01;37;41m   VERIFICANDO SE HÁ ADS DISPONÍVEL   \e[0m"; sleep .5; echo
                echo -e "      \e[01;37m 𝚁𝙴𝚀𝚄𝙸𝚂𝙸𝚃𝙰𝙽𝙳𝙾 𝙿𝙰𝚂𝚂\e[0m"
                echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m";sleep .5
                
                pass=$(curl -s -d "version=2" i.vivo.ddivulga.com/i/gp)
                pass2=$(echo $pass| jq -r .sctoken)
                pass3=$(echo $pass| grep -c sctoken)
                    case $pass3 in
                         0) echo -e "\e[00;33m POH \n dica: NÃO UTILIZE WI-FI OU VPN DURANTE A VERIFICAÇÃO\e[0m"; sleep 4; break;;
                         1) echo -e "\e[01;37m CERTO PASS\e[0m\e[01;32m OK!\e[0m"|pv -qL 20; sleep .5
                               echo -e "\e[01;37m PASS >\e[0m\e[00;32m $pass2\e[0m"; sleep 1
                    esac
                    
                    tx="NÃO HÁ ADS DISPONÍVEL PRA ESSE CHIP FULEIRO..."
                    tx2="CONTINUANDO PARA OS TOKENS PADRÃO\n CASO NADA IR BEM, CHAME A CRUSH"
                echo; echo -e "     \e[01;37m 𝚅𝙴𝚁𝙸𝙵𝙸𝙲𝙰𝙽𝙳𝙾 𝚂𝙴 𝙷Á 𝙰𝙳𝚂 \e[0m"
                echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m";sleep .5
                
                pass=$(curl -s -d "version=2" i.vivo.ddivulga.com/i/gp)
                pass2=$(echo $pass| jq -r .sctoken)
                url=$(curl -s -d "slotId=%5B%7B%22slotId%22%3A110%2C%22target%22%3A%22%22%7D%5D&pageId=693930&insertionId=&insertionUUID=&insertionType=&referer=http%3A%2F%2Fportalrecarga.vivo.com.br%2F&accessPass=$pass2" http://e.vivo.ddivulga.com/api/v2.1/fetch -H "Origin: http://a.vivo.ddivulga.com")
                    
                    while :; do # verificar ads on / token
                       token2=$(echo $url | jq -r '.["110"].appInstallRewardAdvUuid')
                         case $token2 in
                              null) echo -e "\e[01;37m OK ADS ON / AGORA VEREMOS SE HÁ TOKEN ONLINE\e[0m";;
                                 *) ttt=1; toki=$(echo $url | jq -r '.["110"].appInstallRewardAdvUuid'); break
                         esac
                       token=$(echo $url | grep -c "campid:")
                         case $token in
                                 1) ttt=1; toki=$(echo $url | grep -o "campid:......................................." | cut -d":" -f2 | cut -d'"' -f2); break;;
                                 0) echo -e "\e[01;37m NÃO ENCONTRAMOS TOKEN, PORÉM VOCÊ TERÁ SUCESSO NO PADRÃO\e[0m"; sleep .5; tx="CONTINUANDO PARA OS TOKENS PADRÃO"; tx2=; ttt=0; break
                         esac
                    done
                    numero=$(echo $url | jq -r '.msisdn')
                    case $ttt in
                         0) echo -e "\e[01;33m $tx\e[0m"|pv -qL 20; sleep .5
                            echo -e "\e[01;02;37m $tx2\e[0m"|pv -qL 18; sleep 3;;
                         1) echo -e "\e[01;37m CERTO, ADS\e[0m\e[01;32m ON!\e[0m"|pv -qL 18; sleep .5
                            echo -e "\e[01;37m TOKEN >\e[0m\e[00;32m $toki\e[0m"; sleep .5
                            echo -e "\e[01;37m NUMERO >\e[0m\e[00;32m $numero\e[0m"; sleep 1
                            
                            echo; echo -e "      \e[01;37m 𝙸𝙽𝙸𝙲𝙸𝙰𝙽𝙳𝙾 𝙾 𝚃𝙾𝙺𝙴𝙽 \e[0m"
                            echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m";sleep .5
                
                                VEZES=2
                                for i in $(seq $VEZES);
                                do
                            response=$(data=$"msisdn=$numero&campid=$token2&opCode=VV" && site="http://interatividade.vivo.ddivulga.com/carrotProcess" && curl -s "${site}" -H "Referer: http://navegue.vivo.com.br/" -d "${data}")
                            body=$(echo $response | jq -r '.packprovision')

                                case $body in
                                 null) echo -e "\e[01;33m MB INDISPONÍVEL NESSE TOKEN\e[0m"|pv -qL 20; sleep .3; echo -e "\e[01;02;37m CONTINUANDO PARA OS TOKENS PADRÃO!\e[0m"|pv -qL 18; sleep 3; break && break;;
                      packprovisionOK) echo -e "\e[01;32m SUCESSO SÓ ESPERAR CAIR\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 18
                                esac
                                done
                                esac
                                
                           clear; echo -e $tit; echo
                                  echo -e "\e[01;37;41m           TESTADOR PADRÃO           \e[0m"; echo
                                  echo -e "\e[07;01;37;40m NUMERO \e[01;31;47m $numero \e[0m"; sleep .5; echo
                           qtdtokens=$(echo "$tokens"| wc -l)
                           for o in $(seq $qtdtokens);
                              do
                           VEZES=2
                           tokens1=("sed '"$o"p; d'")
                           tokens2=$(echo "$tokens" | eval $tokens1)
                              echo -e "\e[07;01;37;40m   ＴＯＫＥＮ \e[01;36;40m $o \e[0m"
                              echo -e "\e[01;32m TOKEN \e[01;37m: \e[0m\e[01;04;37m$tokens2\e[0m"
                          for i in $(seq $VEZES);
                             do
                          response=$(data=$"msisdn=$numero&campid=$tokens2&opCode=VV" && site="http://interatividade.vivo.ddivulga.com/carrotProcess" && curl -s "${site}" -H "Referer: http://a.vivo.ddivulga.com/" -d "${data}")
                          body=$(echo $response | jq '.packprovision')
                          pack=$'"packprovisionOK"'
                              case $o in
                              $qtdtokens) mssg=$(echo "FINALIZANDO");;
                                       *) mssg=$(echo "INICIANDO O PRÓXIMO")
                              esac
                              case $body in
                                   null) echo -e "\e[01;33m MB INDISPONÍVEL NESSE TOKEN\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
                                  $pack) echo -e "\e[01;32m SUCESSO SÓ ESPERAR CAIR\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 18;;
                                      *) echo "AFF"; echo $response; break
                              esac
                             done
                            done
                          echo -e "          \e[01;37m ＯＰＣＯＥＳ \e[0m"
                          echo -e "  \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
                          echo -e "  \e[01;37m〘*1*〙\e[0m\e[01;04;33mINICIAR SEM VERIFICAÇÃO\e[0m\c"; echo -e "\e[02;03;37m Cole o número manualmente\e[0m"
                          echo -e "  \e[01;37m〘*2*〙\e[0m\e[01;04;33mDE NOVO COM VERIFICAÇÃO\e[0m\c"; echo -e "\e[02;03;37m Tudo automático\e[0m"
                          echo -e "  \e[00;31m══════════════\e[0m\e[01;37m︾\e[00 ;31m═══════════════\e[0m"
                          echo -e "  \e[01;37m『*3*』\e[0m\e[01;04;33mVOLTAR PARA O MENU\e[0m\c"; echo -e "\e[02;03;37m\e[0m"
                          echo -e "  \e[01;37m『*0*』\e[0m\e[01;04;33mCAIR FORA DO SCRIPT\e[0m\c"; echo -e "\e[02;03;37m     Noob sofre\e[0m"
                          echo -e "  \e[00;31m═══════════════════════════════\e[0m"
               
                          while :; do
                            veri=$(echo -e "\e[01;37m Opção: \e[0m")
                          read -n1 -p "$veri" opc2; echo
                          case $opc2 in
                              1)
                                clear; echo -e $tit; echo
                                       echo -e "\e[01;37;41m           TESTADOR PADRÃO           \e[0m"; sleep .5; echo
                                       echo -e "\e[01;37;41m Coloque 55+DDD+NÚMERO \e[0m"
                                read -p "$veri" NUMERO; sleep 1
                                clear; echo -e $tit; echo
                                       echo -e "\e[01;37;41m           TESTADOR PADRÃO           \e[0m"; echo
                                       echo -e "\e[07;01;37;40m NUMERO \e[01;31;47m $NUMERO \e[0m"; sleep .5; echo
                                veri=$(echo -e "\e[01;37m Numero: \e[0m")
                                for o in $(seq $qtdtokens);
                                   do
                                VEZES=3
                                tokens1=("sed '"$o"p; d'")
                                tokens2=$(echo "$tokens" | eval $tokens1)
                                       echo -e "\e[07;01;37;40m   ＴＯＫＥＮ \e[01;36;40m $o \e[0m"
                                       echo -e "\e[01;32m TOKEN \e[01;37m: \e[0m\e[01;04;37m$tokens2\e[0m"
                                for i in $(seq $VEZES);
                                  do
                                response=$(data=$"msisdn=$NUMERO&campid=$tokens2&opCode=VV" && site="http://interatividade.vivo.ddivulga.com/carrotProcess" && curl -s "${site}" -H "Referer: http://a.vivo.ddivulga.com/" -d "${data}")
                                body=$(echo $response | jq '.packprovision')
                                pack=$'"packprovisionOK"'
                                case $o in
                                  $qtdtokens) mssg=$(echo "FINALIZANDO");;
                                           *) mssg=$(echo "INICIANDO O PRÓXIMO")
                                esac 
                                case $body in
                                   null) echo -e "\e[01;33m MB INDISPONÍVEL NESSE TOKEN\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
                                  $pack) echo -e "\e[01;32m SUCESSO SÓ ESPERAR CAIR\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 18;;
                                      *) echo "AFF"; echo $response; break
                               esac
                              done
                             done
                           echo -e "          \e[01;37m ＯＰＣＯＥＳ \e[0m"
                           echo -e "  \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
                           echo -e "  \e[01;37m〘*1*〙\e[0m\e[01;04;33mDE NOVO SEM VERIFICAÇÃO\e[0m\c"; echo -e "\e[02;03;37m Só colocar o numero\e[0m"
                           echo -e "  \e[01;37m〘*2*〙\e[0m\e[01;04;33mINICIAR COM VERIFICAÇÃO\e[0m\c"; echo -e "\e[02;03;37m Tudo automatico\e[0m"
                           echo -e "  \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
                           echo -e "  \e[01;37m『*3*』\e[0m\e[01;04;33m VOLTAR PARA O MENU\e[0m\c"; echo -e "\e[02;03;37m\e[0m"
                           echo -e "  \e[01;37m『*0*』\e[0m\e[01;04;33mCAIR FORA DO SCRIPT\e[0m\c"; echo -e "\e[02;03;37m     Noob sofre\e[0m"
                           echo -e "  \e[00;31m═══════════════════════════════\e[0m";;
                          2) break;;
                          3) break;;
                          0) exit;;
                          *) echo -e "\e[01;37;41m CALMA BARBOLETA \e[0m"; sleep 1
                         esac
                        done
                          case $opc2 in
                              3) break
                          esac
                     done;;
                 
    2) 
     while :; do
             echo -e "\e[01;02;37m # Dica: Você pode pegar o pass no site da vivo:\n \e[01;02;04;37mi.vivo.ddivulga.com/i/gp\e[0m\e[01;02;37m #\e[0m"|pv -qL 18; sleep 3
             clear; echo -e $tit; echo; echo -e "\e[01;37;41m   VERIFICANDO SE HÁ ADS DISPONIVEL   \e[0m"; sleep .5; echo
              
             echo -e "\e[01;37;41m Cole o PASS \e[0m"
                    read -n86 -p "Pass: " passs; sleep 1.5
             clear; echo -e $tit; echo; echo -e "\e[01;37;41m   VERIFICANDO SE HÁ ADS DISPONÍVEL   \e[0m"; sleep .5; echo
          
             tx="NÃO HÁ ADS DISPONÍVEL PRA ESSE CHIP FULEIRO..."
             tx2="CONTINUANDO PARA OS TOKENS PADRÃO\n CASO NADA IR BEM, CHAME A CRUSH"
                echo -e "     \e[01;37m 𝚅𝙴𝚁𝙸𝙵𝙸𝙲𝙰𝙽𝙳𝙾 𝚂𝙴 𝙷𝙰 𝙰𝙳𝚂 \e[0m"
                echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m";sleep .5
                
             pass2=$"$passs"
             url=$(curl -s -d "slotId=%5B%7B%22slotId%22%3A110%2C%22target%22%3A%22%22%7D%5D&pageId=693930&insertionId=&insertionUUID=&insertionType=&referer=http%3A%2F%2Fportalrecarga.vivo.com.br%2F&accessPass=$pass2" http://e.vivo.ddivulga.com/api/v2.1/fetch -H "Origin: http://a.vivo.ddivulga.com")
                    
             while :; do # verificar ads on / token
              token2=$(echo $url | jq -r '.["110"].appInstallRewardAdvUuid')
                case $token2 in
                       null) echo -e "\e[01;37m OK ADS ON / AGORA VEREMOS SE HÁ TOKEN ONLINE\e[0m";;
                          *) ttt=1; toki=$(echo $url | jq -r '.["110"].appInstallRewardAdvUuid'); break
                esac
              token=$(echo $url | grep -c "campid:")
                case $token in
                         1) ttt=1; toki=$(echo $url | grep -o "campid:......................................." | cut -d":" -f2 | cut -d'"' -f2); break;;
                         0) echo -e "\e[01;37m NÃO ENCONTRAMOS TOKEN, PORÉM VOCÊ TERÁ SUCESSO NO PADRÃO\e[0m"; sleep .5; tx="CONTINUANDO PARA OS TOKENS PADRÃO"; tx2=; ttt=0; break
                esac
             done
              numero=$(echo $url | jq -r '.msisdn')
                case $ttt in
                       0) echo -e "\e[01;33m $tx\e[0m"|pv -qL 20; sleep .5
                            echo -e "\e[01;02;37m $tx2\e[0m"|pv -qL 18; sleep 3;;
                       1) echo -e "\e[01;37m CERTO, ADS\e[0m\e[01;32m ON!\e[0m"|pv -qL 18; sleep .5
                          echo -e "\e[01;37m TOKEN >\e[0m\e[00;32m $toki\e[0m"; sleep .5
                          echo -e "\e[01;37m NUMERO >\e[0m\e[00;32m $numero\e[0m"; sleep 1
                            
                          echo; echo -e "      \e[01;37m 𝙸𝙽𝙸𝙲𝙸𝙰𝙽𝙳𝙾 𝙾 𝚃𝙾𝙺𝙴𝙽 \e[0m"
                          echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m";sleep .5
                
                          VEZES=2
                         for i in $(seq $VEZES);
                                do
                          response=$(data=$"msisdn=$numero&campid=$token2&opCode=VV" && site="http://interatividade.vivo.ddivulga.com/carrotProcess" && curl -s "${site}" -H "Referer: http://navegue.vivo.com.br/" -d "${data}")
                          body=$(echo $response | jq -r '.packprovision')
                            #echo $response

                            case $body in
                                 null) echo -e "\e[01;33m MB INDISPONÍVEL NESSE TOKEN\e[0m"|pv -qL 20; sleep .3; echo -e "\e[01;02;37m CONTINUANDO PARA OS TOKENS PADRÃO!\e[0m"|pv -qL 18; sleep 3; break && break;;
                      packprovisionOK) echo -e "\e[01;32m SUCESSO SÓ ESPERAR CAIR\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 18
                            esac
                           done
                esac

             clear; echo -e $tit; echo
                    echo -e "\e[01;37;41m           TESTADOR PADRÃO           \e[0m"; echo
                    echo -e "\e[07;01;37;40m NUMERO \e[01;31;47m $numero \e[0m"; sleep .5; echo
                    qtdtokens=$(echo "$tokens"| wc -l)
                    for o in $(seq $qtdtokens);
                       do
                    VEZES=2
                    tokens1=("sed '"$o"p; d'")
                    tokens2=$(echo "$tokens" | eval $tokens1)
                      echo -e "\e[07;01;37;40m   ＴＯＫＥＮ \e[01;36;40m $o \e[0m"
                      echo -e "\e[01;32m TOKEN \e[01;37m: \e[0m\e[01;04;37m$tokens2\e[0m"
                    for i in $(seq $VEZES);
                       do
                    response=$(data=$"msisdn=$numero&campid=$tokens2&opCode=VV" && site="http://interatividade.vivo.ddivulga.com/carrotProcess" && curl -s "${site}" -H "Referer: http://a.vivo.ddivulga.com/" -d "${data}")
                    body=$(echo $response | jq '.packprovision')
                    pack=$'"packprovisionOK"'
                        case $o in
                        $qtdtokens) mssg=$(echo "FINALIZANDO");;
                                 *) mssg=$(echo "INICIANDO O PRÓXIMO")
                        esac
                     case $body in
                          null) echo -e "\e[01;33m MB INDISPONÍVEL NESSE TOKEN\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
                         $pack) echo -e "\e[01;32m SUCESSO SÓ ESPERAR CAIR\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 18;;
                             *) echo "AFF"; echo $response; break
                     esac
                     done
                     done
                       echo -e "          \e[01;37m ＯＰＣＯＥＳ \e[0m"
                       echo -e "  \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
                       echo -e "  \e[01;37m〘*1*〙\e[0m\e[01;04;33mINICIAR SEM VERIFICAÇÃO\e[0m\c"; echo -e "\e[02;03;37m Cole o número manualmente\e[0m"
                       echo -e "  \e[01;37m〘*2*〙\e[0m\e[01;04;33mDE NOVO COM VERIFICAÇÃO\e[0m\c"; echo -e "\e[02;03;37m Tudo automático\e[0m"
                       echo -e "  \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
                       echo -e "  \e[01;37m『*3*』\e[0m\e[01;04;33mVOLTAR PARA O MENU\e[0m\c"; echo -e "\e[02;03;37m\e[0m"
                       echo -e "  \e[01;37m『*0*』\e[0m\e[01;04;33mCAIR FORA DO SCRIPT\e[0m\c"; echo -e "\e[02;03;37m     Noob sofre\e[0m"
                       echo -e "  \e[00;31m═══════════════════════════════\e[0m"

               
                  while :; do
                  veri=$(echo -e "\e[01;37m Opção: \e[0m")
                   read -n1 -p "$veri" opc2; echo
                  case $opc2 in
                       1)
                       clear; echo -e $tit; echo
                            echo -e "\e[01;37;41m           TESTADOR PADRÃO           \e[0m"; sleep .5; echo
                            echo -e "\e[01;37;41m Coloque 55+DDD+NÚMERO \e[0m"
                            read -p "$veri" NUMERO; sleep 1
                       clear; echo -e $tit; echo
                            echo -e "\e[01;37;41m           TESTADOR PADRÃO           \e[0m"; echo
                            echo -e "\e[07;01;37;40m NUMERO \e[01;31;47m $NUMERO \e[0m"; sleep .5; echo
                            veri=$(echo -e "\e[01;37m Numero: \e[0m")
                            for o in $(seq $qtdtokens);
                               do
                            VEZES=3
                            tokens1=("sed '"$o"p; d'")
                            tokens2=$(echo "$tokens" | eval $tokens1)
                               echo -e "\e[07;01;37;40m   ＴＯＫＥＮ \e[01;36;40m $o \e[0m"
                               echo -e "\e[01;32m TOKEN \e[01;37m: \e[0m\e[01;04;37m$tokens2\e[0m"
                            for i in $(seq $VEZES);
                               do
                            response=$(data=$"msisdn=$NUMERO&campid=$tokens2&opCode=VV" && site="http://interatividade.vivo.ddivulga.com/carrotProcess" && curl -s "${site}" -H "Referer: http://a.vivo.ddivulga.com/" -d "${data}")
                            body=$(echo $response | jq '.packprovision')
                            pack=$'"packprovisionOK"'
                              case $o in
                             $qtdtokens) mssg=$(echo "FINALIZANDO");;
                                      *) mssg=$(echo "INICIANDO O PRÓXIMO")
                              esac 
                              case $body in
                                   null) echo -e "\e[01;33m MB INDISPONÍVEL NESSE TOKEN\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
                                  $pack) echo -e "\e[01;32m SUCESSO SÓ ESPERAR CAIR\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 18;;
                                      *) echo "AFF"; echo $response; break
                              esac
                            done
                            done
                            echo -e "          \e[01;37m ＯＰＣＯＥＳ \e[0m"
                       echo -e "  \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
                       echo -e "  \e[01;37m〘*1*〙\e[0m\e[01;04;33mDE NOVO SEM VERIFICAÇÃO\e[0m\c"; echo -e "\e[02;03;37m Cole o número manualmente\e[0m"
                       echo -e "  \e[01;37m〘*2*〙\e[0m\e[01;04;33mINICIAR COM VERIFICAÇÃO\e[0m\c"; echo -e "\e[02;03;37m Tudo automático\e[0m"
                       echo -e "  \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
                       echo -e "  \e[01;37m『*3*』\e[0m\e[01;04;33m VOLTAR PARA O MENU\e[0m\c"; echo -e "\e[02;03;37m\e[0m"
                       echo -e "  \e[01;37m『*0*』\e[0m\e[01;04;33mCAIR FORA DO SCRIPT\e[0m\c"; echo -e "\e[02;03;37m     Noob sofre\e[0m"
                       echo -e "  \e[00;31m═══════════════════════════════\e[0m";;
                       2) break;;
                       3) break;;
                       0) exit;;
                       *) echo -e "\e[01;37;41m CALMA BARBOLETA \e[0m"; sleep 1
                   esac
                   done
                   case $opc2 in
                      3) break
                      esac
                  done;;
                     
    3)
     while :; do
        clear; echo -e $tit; echo
               echo -e "\e[01;37;41m           TESTADOR PADRÃO           \e[0m"; echo
         qtdtokens=$(echo "$tokens"| wc -l)
               echo -e "\e[01;37;41m Coloque 55+DDD+NÚMERO \e[0m"
         veri=$(echo -e "\e[01;37m Numero: \e[0m")
          read -p "$veri" NUMERO; sleep 1
         clear; echo -e $tit; echo
                echo -e "\e[01;37;41m           TESTADOR PADRÃO           \e[0m"; echo
                echo -e "\e[07;01;37;40m NUMERO \e[01;31;47m $NUMERO \e[0m"; sleep .5; echo
          for o in $(seq $qtdtokens);
             do
         VEZES=3
         tokens1=("sed '"$o"p; d'")
         tokens2=$(echo "$tokens" | eval $tokens1)
                 echo -e "\e[07;01;37;40m   ＴＯＫＥＮ \e[01;36;40m $o \e[0m"
                 echo -e "\e[01;32m TOKEN \e[01;37m: \e[0m\e[01;04;37m$tokens2\e[0m"
          for i in $(seq $VEZES);
             do
         response=$(data=$"msisdn=$NUMERO&campid=$tokens2&opCode=VV" && site="http://interatividade.vivo.ddivulga.com/carrotProcess" && curl -s "${site}" -H "Referer: http://a.vivo.ddivulga.com/" -d "${data}")
         body=$(echo $response | jq '.packprovision')
         pack=$'"packprovisionOK"'
             case $o in
             $qtdtokens) mssg=$(echo "FINALIZANDO");;
                      *) mssg=$(echo "INICIANDO O PRÓXIMO")
             esac 
             case $body in
                  null) echo -e "\e[01;33m MB INDISPONÍVEL NESSE TOKEN\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
                 $pack) echo -e "\e[01;32m SUCESSO SÓ ESPERAR CAIR\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 18;;
                     *) echo "AFF"; echo $response; break
             esac
            done
           done
                            echo -e "          \e[01;37m ＯＰＣＯＥＳ \e[0m"
                       echo -e "  \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
                       echo -e "  \e[01;37m〘*1*〙\e[0m\e[01;04;33mREPETIR TESTADOR PADRÃO\e[0m\c"; echo -e "\e[02;03;37m Cole o número manualmente\e[0m"
                       echo -e "  \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
                       echo -e "  \e[01;37m『*2*』\e[0m\e[01;04;33mVOLTAR PARA O MENU\e[0m\c"; echo -e "\e[02;03;37m\e[0m"
                       echo -e "  \e[01;37m『*0*』\e[0m\e[01;04;33mCAIR FORA DO SCRIPT\e[0m\c"; echo -e "\e[02;03;37m     Noob sofre\e[0m"
                       echo -e "  \e[00;31m═══════════════════════════════\e[0m"
                       veri=$(echo -e "\e[01;37m Opção: \e[0m")
                          read -n1 -p "$veri" opc2; echo
                          case $opc2 in
                              1);;
                              2) break;;
                              0) exit;;
                              *) echo -e "\e[01;37;41m CALMA BARBOLETA \e[0m"; sleep 1
                          esac
                          case $opc2 in
                              3) break
                          esac
                    done;;
                
    4) 
      clear; echo -e $tit; echo
             echo -e "\e[01;37;41m            SOLICITAR PASS             \e[0m"; echo
             echo -e "\e[01;02;37m # UTILIZE A REDE DO CHIP NESSA OPÇÃO! #\e[0m"|pv -qL 20; echo
             echo -e "      \e[01;37m 𝚁𝙴𝚀𝚄𝙸𝚂𝙸𝚃𝙰𝙽𝙳𝙾 𝙾 𝙿𝙰𝚂𝚂\e[0m"
             echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m";sleep .5
                
                pass=$(curl -s -d "version=2" i.vivo.ddivulga.com/i/gp)
                pass2=$(echo $pass| jq -r .sctoken)
                pass3=$(echo $pass| grep -c sctoken)
                    case $pass3 in
                         0) echo -e "\e[00;33m POH \n dica: NÃO UTILIZE WI-FI OU VPN DURANTE A VERIFICAÇÃO\e[0m"; sleep 4; break;;
                         1) echo -e "\e[01;37m CERTO PASS\e[0m\e[01;32m OK!\e[0m"|pv -qL 20; sleep .5
                               echo -e "\e[01;37m PASS > \e[0m\e[01;04;32m$pass2\e[0m"; sleep 1
                         echo; echo -e "\e[01;02;37m # AGORA SÓ COPIAR E SALVAR EM ALGUM LUGAR LONGE DE MIM #\e[0m"; sleep .5; echo
                    esac
             echo; echo -e "\e[01;33m PRESSIONE QUALQUER TECLA PARA VOLTAR\e[0m"
              read -n1;;
              
    0) exit;;
    *) echo -e "\e[01;37;41m CALMA BARBOLETA \e[0m"; sleep 1
              
     esac # case MENU
    done # primeiro loop
